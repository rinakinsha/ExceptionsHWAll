**УРОК 1: Обработка ошибок в программировании**
Task11: Реализуйте 3 метода, чтобы в каждом из них получить разные исключения;

Task21: Посмотрите на код, и подумайте сколько разных типов исключений вы тут сможете получить?

Task31: Реализуйте метод, принимающий в качестве аргументов два целочисленных массива, и возвращающий новый массив, каждый элемент которого равен разности элементов двух входящих массивов в той же ячейке. Если длины массивов не равны, необходимо как-то оповестить пользователя. Вместо массива может прийти null (обработать);

Task41: Реализуйте метод, принимающий в качестве аргументов два целочисленных массива, и возвращающий новый массив, каждый элемент которого равен частному элементов двух входящих массивов в той же ячейке. Если длины массивов не равны, необходимо как-то оповестить пользователя. Важно: При выполнении метода единственное исключение, которое пользователь может увидеть - RuntimeException, т.е. ваше

**УРОК 2: Исключения и их обработка**

Task12: Реализуйте метод, который запрашивает у пользователя ввод дробного числа (типа float), и возвращает введенное значение. Ввод текста вместо числа не должно приводить к падению приложения, вместо этого, необходимо повторно запросить у пользователя ввод данных. В этом задании не используем try catch. Пишем регулярное выражение и используем на строке метод matches.

Task22: Если необходимо, исправьте данный код (задание 2 https://docs.google.com/document/d/17EaA1lDxzD5YigQ5OAal60fOFKVoCbEJqooB9XfhT7w/edit)

Task32: Дан следующий код, исправьте его там, где требуется (задание 3 https://docs.google.com/document/d/17EaA1lDxzD5YigQ5OAal60fOFKVoCbEJqooB9XfhT7w/edit)

Task 42: Разработайте программу, которая выбросит Exception, когда пользователь вводит пустую строку. Пользователю должно показаться сообщение, что пустые строки вводить нельзя. (try быть не должно)

**УРОК 3: Продвинутая работа с исключениями в Java**

Task13: Создать статический метод который принимает на вход три параметра: login, password и confirmPassword.
        Login должен содержать только латинские буквы, цифры и знак подчеркивания.
        Длина login должна быть меньше 20 символов. Если login не соответствует этим требованиям, необходимо выбросить WrongLoginException.
        Password должен содержать только латинские буквы, цифры и знак подчеркивания. Длина password должна быть меньше 20 символов. Также password и confirmPassword должны быть равны.
        Если password не соответствует этим требованиям, необходимо выбросить WrongPasswordException.
        WrongPasswordException и WrongLoginException - пользовательские классы исключения с двумя конструкторами – один по умолчанию, второй принимает сообщение исключения и передает его в конструктор класса Exception.
        Обработка исключений проводится внутри метода.
        Метод возвращает true, если значения верны или false в другом случае.